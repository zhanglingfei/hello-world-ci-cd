name: CI/CD Pipeline
#on: [push, pull_request]

on:
  push:
    paths-ignore:
      - 'README.md'
      - 'QA response.md'
      - 'terraform/**'
  pull_request:
    paths-ignore:
      - 'README.md'
      - 'QA response.md'
      - 'terraform/**'
env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: hello-world-cluster-tokyo
  GKE_ZONE: asia-northeast1-a
  IMAGE: hello-world

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          install_components: 'docker-credential-gcr'

      - name: Configure Docker
        run: |
          gcloud auth configure-docker gcr.io --quiet

      - name: Build and push Docker image
        env:
          GCR_HOSTNAME: gcr.io
        run: |
          docker build -t ${GCR_HOSTNAME}/${GCP_PROJECT_ID}/${IMAGE}:${{ github.sha }} .
          docker push ${GCR_HOSTNAME}/${GCP_PROJECT_ID}/${IMAGE}:${{ github.sha }}
          docker tag ${GCR_HOSTNAME}/${GCP_PROJECT_ID}/${IMAGE}:${{ github.sha }} ${GCR_HOSTNAME}/${GCP_PROJECT_ID}/${IMAGE}:latest
          docker push ${GCR_HOSTNAME}/${GCP_PROJECT_ID}/${IMAGE}:latest

      - name: Get GKE Credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      - name: Update deployment file
        run: |
          sed -i 's|image: .*|image: gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.IMAGE }}:${{ github.sha }}|' kubernetes/deployment.yaml

      - name: Deploy to GKE
        run: |
          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/service.yaml
          kubectl rollout status deployment/hello-world
          kubectl get services -o wide
          kubectl get pods -l app=hello-world

